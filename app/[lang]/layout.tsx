import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";

import "./globals.css";

import { ThemeProvider } from "@/providers/theme.provider";
import { Locale } from "@/i18n-config";
import { getDictionary } from "@/get-dictionary";
import { TranslationProvider } from "@/providers/translation.provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lang: Locale }>;
}>) {
  const { lang } = await params;
  const dictionary = await getDictionary(lang);

  return (
    <html lang="en" className="h-full antialiased" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex h-full bg-zinc-50 dark:bg-black`}
      >
        <ThemeProvider>
          <TranslationProvider lang={lang} dictionary={dictionary}>
            {children}
          </TranslationProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
